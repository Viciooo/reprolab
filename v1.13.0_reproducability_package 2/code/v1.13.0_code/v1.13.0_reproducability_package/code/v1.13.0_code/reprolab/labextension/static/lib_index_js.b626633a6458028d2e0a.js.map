{"version":3,"file":"lib_index_js.b626633a6458028d2e0a.js","mappings":"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","sources":["webpack://reprolab/./src/index.ts","webpack://reprolab/./src/sections/archive.ts","webpack://reprolab/./src/sections/checklist.ts","webpack://reprolab/./src/sections/demo.ts","webpack://reprolab/./src/sections/environment.ts","webpack://reprolab/./src/sections/experiment.ts","webpack://reprolab/./src/sections/zenodo.ts","webpack://reprolab/./src/utils.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport {\n  ICommandPalette\n} from '@jupyterlab/apputils';\n\nimport {\n  LabIcon\n} from '@jupyterlab/ui-components';\n\nimport {\n  Widget\n} from '@lumino/widgets';\n\nimport { INotebookTracker } from '@jupyterlab/notebook';\n\nimport { createButton } from './utils';\nimport { ChecklistSection } from './sections/checklist';\nimport { DemoSection } from './sections/demo';\nimport { ArchiveSection } from './sections/archive';\nimport { ZenodoSection } from './sections/zenodo';\nimport { ExperimentSection } from './sections/experiment';\nimport { EnvironmentSection } from './sections/environment';\n\n// Constants\nconst REPROLAB_CONFIG = {\n  ID: 'reprolab-sidebar',\n  TITLE: 'ReproLab',\n  CAPTION: 'ReproLab Panel',\n  COMMAND: 'reprolab:open',\n  COMMAND_LABEL: 'Open ReproLab Panel',\n  COMMAND_CATEGORY: 'ReproLab'\n} as const;\n\nconst BUTTON_IDS = {\n  DEMO: 'reprolab-demo-btn',\n  ARCHIVE_SAVE: 'reprolab-archive-save',\n  ZENODO_MORE: 'reprolab-zenodo-more',\n  CREATE_EXPERIMENT: 'reprolab-create-experiment-btn',\n  CREATE_ENVIRONMENT: 'reprolab-create-environment-btn',\n  FREEZE_DEPS: 'reprolab-freeze-deps-btn',\n  MODAL_TEST: 'reprolab-modal-test'\n} as const;\n\nconst CHECKBOX_SELECTOR = 'input[type=\"checkbox\"]';\n\n/** SVG string for the ReproLab icon */\nconst REPROLAB_ICON_SVG = `\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" viewBox=\"0 0 24 24\">\n  <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\" fill=\"currentColor\"/>\n</svg>\n`;\n\n/** Create the ReproLab icon */\nconst reprolabIcon = new LabIcon({\n  name: 'reprolab:icon',\n  svgstr: REPROLAB_ICON_SVG\n});\n\n/** The sidebar widget for the ReproLab panel */\nclass ReprolabSidebarWidget extends Widget {\n  private checklistSection!: ChecklistSection;\n  private demoSection!: DemoSection;\n  private archiveSection!: ArchiveSection;\n  private zenodoSection!: ZenodoSection;\n  private experimentSection!: ExperimentSection;\n  private environmentSection!: EnvironmentSection;\n  private readonly notebooks: INotebookTracker | undefined;\n  private readonly app: JupyterFrontEnd;\n\n  constructor(app: JupyterFrontEnd, notebooks?: INotebookTracker) {\n    super();\n    this.app = app;\n    this.notebooks = notebooks;\n    \n    this.initializeWidget();\n    this.initializeSections();\n    this.render();\n    this.loadChecklistState();\n  }\n\n  private initializeWidget(): void {\n    this.id = REPROLAB_CONFIG.ID;\n    this.addClass('jp-SideBar');\n    this.addClass('reprolab-sidebar');\n    this.title.icon = reprolabIcon;\n    this.title.label = REPROLAB_CONFIG.TITLE;\n    this.title.caption = REPROLAB_CONFIG.CAPTION;\n  }\n\n  private initializeSections(): void {\n    this.checklistSection = new ChecklistSection();\n    this.demoSection = new DemoSection(this.app, this.notebooks);\n    this.archiveSection = new ArchiveSection();\n    this.zenodoSection = new ZenodoSection(this.app, this.notebooks);\n    this.experimentSection = new ExperimentSection(this.app, this.notebooks);\n    this.environmentSection = new EnvironmentSection(this.app, this.notebooks);\n  }\n\n  private async loadChecklistState(): Promise<void> {\n    await this.checklistSection.loadChecklistState();\n    this.render();\n  }\n\n  render(): void {\n    const container = this.createMainContainer();\n    const modal = this.createModal();\n    \n    this.node.innerHTML = '';\n    this.node.appendChild(container);\n    document.body.appendChild(modal);\n\n    this.setupEventListeners(modal);\n  }\n\n  private createMainContainer(): HTMLElement {\n    const container = document.createElement('div');\n    \n    // Header section\n    const header = this.createHeader();\n    container.appendChild(header);\n\n    // Sections\n    const sections = [\n      this.demoSection.render(),\n      this.checklistSection.render(),\n      this.environmentSection.render(),\n      this.experimentSection.render(),\n      this.archiveSection.render(),\n      this.zenodoSection.render()\n    ];\n\n    sections.forEach(sectionHtml => {\n      const fragment = document.createRange().createContextualFragment(sectionHtml);\n      container.appendChild(fragment);\n    });\n\n    return container;\n  }\n\n  private createHeader(): HTMLElement {\n    const header = document.createElement('div');\n    header.className = 'reprolab-header';\n    header.innerHTML = `\n      <h1>ReproLab</h1>\n      <h3>One step closer to accessible reproducible research</h3>\n    `;\n    return header;\n  }\n\n  private createModal(): HTMLElement {\n    const modal = document.createElement('div');\n    modal.className = 'reprolab-modal';\n    \n    const modalContent = document.createElement('div');\n    modalContent.className = 'reprolab-modal-content';\n    \n    const closeButton = document.createElement('span');\n    closeButton.className = 'reprolab-modal-close';\n    closeButton.textContent = '×';\n    \n    const modalText = document.createElement('div');\n    modalText.innerHTML = `\n      <section style=\"font-size: 16px; line-height: 1.6;\">\n        <p>\n          Clicking the <strong>Create Reproducibility Package</strong> button below will insert and execute a Python code cell that generates a complete reproducibility package—bundling both your data and code.\n        </p>\n        <p>\n          You can share this package with colleagues or publish it on platforms like \n          <a href=\"https://zenodo.org/\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"color: #0066cc; text-decoration: underline;\">Zenodo</a>, which will assign a persistent identifier (DOI) to your work.\n        </p>\n        <p>\n          For detailed instructions on structuring and publishing reproducible research, please consult the official Zenodo guide:  \n          <a href=\"https://doi.org/10.5281/zenodo.11146986\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"color: #0066cc; text-decoration: underline;\">\n            Make Your Research Reproducible: Practical Guide for Researchers (DOI: 10.5281/zenodo.11146986)\n          </a>\n        </p>\n        <p>\n          Additional help can be found in the Zenodo documentation under their \"Guide\" and \"GitHub and Software\" sections:  \n          <a href=\"https://help.zenodo.org/docs/\" target=\"_blank\" rel=\"noopener noreferrer\" style=\"color: #0066cc; text-decoration: underline;\">Zenodo Guides & Docs</a>\n        </p>\n      </section>\n    `;\n    \n    const createPackageButton = createButton(BUTTON_IDS.MODAL_TEST, 'Create Reproducibility Package');\n    \n    modalContent.appendChild(closeButton);\n    modalContent.appendChild(modalText);\n    modalContent.appendChild(createPackageButton);\n    \n    modal.appendChild(modalContent);\n    return modal;\n  }\n\n  private setupEventListeners(modal: HTMLElement): void {\n    this.setupButtonListeners();\n    this.setupCheckboxListeners();\n    this.setupModalListeners(modal);\n  }\n\n  private setupButtonListeners(): void {\n    // Demo button\n    const demoBtn = this.node.querySelector(`#${BUTTON_IDS.DEMO}`);\n    if (demoBtn) {\n      demoBtn.addEventListener('click', () => this.demoSection.handleDemoButton());\n    }\n\n    // Archive save button\n    const saveBtn = this.node.querySelector(`#${BUTTON_IDS.ARCHIVE_SAVE}`);\n    if (saveBtn) {\n      saveBtn.addEventListener('click', () => this.archiveSection.handleSaveButton(this.node));\n    }\n\n    // Zenodo button\n    const zenodoBtn = this.node.querySelector(`#${BUTTON_IDS.ZENODO_MORE}`);\n    if (zenodoBtn) {\n      zenodoBtn.addEventListener('click', () => {\n        const modal = document.querySelector('.reprolab-modal') as HTMLElement;\n        if (modal) {\n          this.zenodoSection.handleZenodoButton(modal);\n        }\n      });\n    }\n\n    // Create experiment button\n    const createExperimentBtn = this.node.querySelector(`#${BUTTON_IDS.CREATE_EXPERIMENT}`);\n    if (createExperimentBtn) {\n      createExperimentBtn.addEventListener('click', () => this.handleCreateExperiment());\n    }\n\n    // Create environment button\n    const createEnvironmentBtn = this.node.querySelector(`#${BUTTON_IDS.CREATE_ENVIRONMENT}`);\n    if (createEnvironmentBtn) {\n      createEnvironmentBtn.addEventListener('click', () => this.handleCreateEnvironment());\n    }\n\n    // Freeze dependencies button\n    const freezeDepsBtn = this.node.querySelector(`#${BUTTON_IDS.FREEZE_DEPS}`);\n    if (freezeDepsBtn) {\n      freezeDepsBtn.addEventListener('click', () => this.handleFreezeDependencies());\n    }\n  }\n\n  private setupCheckboxListeners(): void {\n    this.node.querySelectorAll(CHECKBOX_SELECTOR).forEach(cb => {\n      cb.addEventListener('change', (event: Event) => \n        this.checklistSection.handleCheckboxChange(event)\n      );\n    });\n  }\n\n  private setupModalListeners(modal: HTMLElement): void {\n    // Modal close button\n    const closeBtn = modal.querySelector('.reprolab-modal-close');\n    if (closeBtn) {\n      closeBtn.addEventListener('click', () => {\n        modal.style.display = 'none';\n      });\n    }\n\n    // Modal test button\n    const modalTestBtn = modal.querySelector(`#${BUTTON_IDS.MODAL_TEST}`);\n    if (modalTestBtn) {\n      modalTestBtn.addEventListener('click', () => {\n        console.log('Create Reproducibility Package button clicked');\n        this.zenodoSection.handleTestButton();\n        modal.style.display = 'none';\n      });\n    }\n\n    // Close modal when clicking outside\n    modal.addEventListener('click', (event) => {\n      if (event.target === modal) {\n        modal.style.display = 'none';\n      }\n    });\n  }\n\n  private handleCreateExperiment(): void {\n    console.log('[ReproLab] Creating experiment...');\n    \n    // Create the experiment\n    this.experimentSection.createExperiment();\n  }\n\n  private handleCreateEnvironment(): void {\n    console.log('[ReproLab] Creating environment...');\n    \n    // Create the environment\n    this.environmentSection.createEnvironment();\n  }\n\n  private handleFreezeDependencies(): void {\n    console.log('[ReproLab] Freezing dependencies...');\n    \n    // Add dependency freeze cell\n    this.environmentSection.addFreezeDepsCell();\n  }\n}\n\n/** Activate the extension */\nfunction activateReprolab(\n  app: JupyterFrontEnd,\n  palette: ICommandPalette,\n  notebooks: INotebookTracker\n): void {\n  console.log('JupyterLab extension reprolab is activated!');\n\n  // Add command to open the sidebar panel\n  app.commands.addCommand(REPROLAB_CONFIG.COMMAND, {\n    label: REPROLAB_CONFIG.COMMAND_LABEL,\n    icon: reprolabIcon,\n    execute: () => {\n      app.shell.activateById(REPROLAB_CONFIG.ID);\n    }\n  });\n\n  // Add the command to the command palette\n  palette.addItem({ \n    command: REPROLAB_CONFIG.COMMAND, \n    category: REPROLAB_CONFIG.COMMAND_CATEGORY \n  });\n\n  // Add the sidebar widget (only once)\n  const sidebarWidget = new ReprolabSidebarWidget(app, notebooks);\n  app.shell.add(sidebarWidget, 'left', { rank: 100 });\n}\n\n/**\n * Initialization data for the reprolab extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'reprolab:plugin',\n  description: 'One step closer reproducible research',\n  autoStart: true,\n  requires: [ICommandPalette, INotebookTracker],\n  activate: activateReprolab\n};\n\nexport default plugin;\n","import { createSection, getXsrfToken } from '../utils';\n\n// Use a relative path to ensure it's created in the current workspace\nconst AWS_ENV_FILE = 'reprolab_data/aws_env.json';\n\nexport class ArchiveSection {\n  private accessKey: string = '';\n  private secretKey: string = '';\n  private bucketName: string = '';\n  private initialized: boolean = false;\n\n  constructor() {\n    this.initialize();\n  }\n\n  private async initialize() {\n    console.log('[ReproLab Archive] Initializing...');\n    await this.loadAWSEnv();\n    this.initialized = true;\n    console.log('[ReproLab Archive] Initialized with values:', {\n      accessKey: this.accessKey ? '***' : '',\n      secretKey: this.secretKey ? '***' : '',\n      bucketName: this.bucketName\n    });\n  }\n\n  render(): string {\n    if (!this.initialized) {\n      console.log('[ReproLab Archive] Not yet initialized, rendering with empty values');\n    }\n    \n    const archiveContent = `\n      <p>Configure AWS S3 credentials for data archiving</p>\n      <div class=\"reprolab-archive-inputs\">\n        <input id=\"reprolab-archive-input1\" type=\"password\" class=\"reprolab-input\" placeholder=\"Access Key\" value=\"${this.accessKey}\">\n        <input id=\"reprolab-archive-input2\" type=\"password\" class=\"reprolab-input\" placeholder=\"Secret Key\" value=\"${this.secretKey}\">\n        <input id=\"reprolab-archive-input3\" type=\"text\" class=\"reprolab-input\" placeholder=\"Bucket Name\" value=\"${this.bucketName}\">\n        <button id=\"reprolab-archive-save\" class=\"reprolab-button\">Save</button>\n      </div>\n    `;\n    \n    const section = createSection('AWS S3 Configuration', archiveContent);\n    return section.outerHTML;\n  }\n\n  async handleSaveButton(node: HTMLElement) {\n    const accessKey = (node.querySelector('#reprolab-archive-input1') as HTMLInputElement)?.value || '';\n    const secretKey = (node.querySelector('#reprolab-archive-input2') as HTMLInputElement)?.value || '';\n    const bucketName = (node.querySelector('#reprolab-archive-input3') as HTMLInputElement)?.value || '';\n    \n    this.accessKey = accessKey;\n    this.secretKey = secretKey;\n    this.bucketName = bucketName;\n\n    await this.saveAWSEnv();\n    console.log('[ReproLab Archive Save]', { \n      accessKey: accessKey ? '***' : '', \n      secretKey: secretKey ? '***' : '', \n      bucketName \n    });\n  }\n\n  private async loadAWSEnv() {\n    console.log('[ReproLab Archive] Loading AWS environment...');\n    try {\n      const response = await fetch(`/api/contents/${AWS_ENV_FILE}`);\n      console.log('[ReproLab Archive] Fetch response status:', response.status);\n      \n      if (response.ok) {\n        const data = await response.json();\n        console.log('[ReproLab Archive] Received data:', data ? 'success' : 'empty');\n        \n        if (data && data.content) {\n          const parsed = JSON.parse(data.content);\n          console.log('[ReproLab Archive] Parsed content:', parsed ? 'success' : 'failed');\n          \n          if (typeof parsed === 'object' && parsed !== null) {\n            this.accessKey = parsed.AWS_ACCESS_KEY_ID || '';\n            this.secretKey = parsed.AWS_SECRET_ACCESS_KEY || '';\n            this.bucketName = parsed.AWS_BUCKET || '';\n            console.log('[ReproLab Archive] Loaded values:', {\n              accessKey: this.accessKey ? '***' : '',\n              secretKey: this.secretKey ? '***' : '',\n              bucketName: this.bucketName\n            });\n          }\n        }\n      } else if (response.status === 404) {\n        console.log('[ReproLab Archive] File not found, creating with empty values');\n        // File does not exist, create it with empty values\n        this.accessKey = '';\n        this.secretKey = '';\n        this.bucketName = '';\n        await this.saveAWSEnv();\n      }\n    } catch (e) {\n      console.error('[ReproLab Archive] Could not load AWS environment variables:', e);\n      // If there's an error, initialize with empty values\n      this.accessKey = '';\n      this.secretKey = '';\n      this.bucketName = '';\n      await this.saveAWSEnv();\n    }\n  }\n\n  private async saveAWSEnv() {\n    console.log('[ReproLab Archive] Saving AWS environment...');\n    try {\n      const xsrfToken = getXsrfToken();\n      const response = await fetch(`/api/contents/${AWS_ENV_FILE}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(xsrfToken ? { 'X-XSRFToken': xsrfToken } : {})\n        },\n        body: JSON.stringify({\n          type: 'file',\n          format: 'text',\n          content: JSON.stringify({\n            AWS_ACCESS_KEY_ID: this.accessKey,\n            AWS_SECRET_ACCESS_KEY: this.secretKey,\n            AWS_BUCKET: this.bucketName\n          })\n        })\n      });\n      console.log('[ReproLab Archive] Save response status:', response.status);\n    } catch (e) {\n      console.error('[ReproLab Archive] Could not save AWS environment variables:', e);\n    }\n  }\n}\n","import { createSection, getXsrfToken } from '../utils';\n\nconst CHECKLIST_FILE = 'reprolab_data/reproducibility_checklist.json';\nconst DEFAULT_CHECKLIST = [\n  \"Notebook contains clear narrative text explaining analysis steps.\",\n  \"All software dependencies are specified with pinned versions.\",\n  \"Project is under version control (e.g., Git) in a public repository.\",\n  \"Notebook can be run end-to-end without manual steps.\",\n  \"All input data are available or easily accessible.\",\n  \"Project includes clear usage and interpretation instructions.\"\n];\n\nexport class ChecklistSection {\n  private checklist: string[];\n  private checked: Record<string, boolean>;\n\n  constructor() {\n    this.checklist = DEFAULT_CHECKLIST;\n    this.checked = {};\n    this.checklist.forEach(item => { this.checked[item] = false; });\n  }\n\n  render(): string {\n    const checklistContent = `\n      <ul style=\"list-style: none; padding-left: 0;\">\n        ${this.checklist\n          .map(\n            item => `\n          <li>\n            <label>\n              <input type=\"checkbox\" data-item=\"${encodeURIComponent(item)}\" ${this.checked[item] ? 'checked' : ''} />\n              ${item}\n            </label>\n          </li>\n        `\n          )\n          .join('')}\n      </ul>\n    `;\n    const section = createSection(\n      'Reproducibility Checklist',\n      checklistContent\n    );\n    return section.outerHTML;\n  }\n\n  handleCheckboxChange(event: Event) {\n    const target = event.target as HTMLInputElement;\n    const item = decodeURIComponent(target.getAttribute('data-item') || '');\n    this.checked[item] = target.checked;\n    this.saveChecklistState();\n  }\n\n  async loadChecklistState() {\n    try {\n      const response = await fetch(`/api/contents/${CHECKLIST_FILE}`);\n      if (response.ok) {\n        const data = await response.json();\n        if (data && data.content) {\n          const parsed = JSON.parse(data.content);\n          if (typeof parsed === 'object' && parsed !== null) {\n            // Only keep keys that are in the current checklist\n            this.checked = {};\n            this.checklist.forEach(item => {\n              this.checked[item] = !!parsed[item];\n            });\n          }\n        }\n      } else if (response.status === 404) {\n        // File does not exist, create it with all unchecked\n        this.checked = {};\n        this.checklist.forEach(item => { this.checked[item] = false; });\n        await this.saveChecklistState();\n      }\n    } catch (e) {\n      // Could not load or parse, fallback to all unchecked\n      this.checked = {};\n      this.checklist.forEach(item => { this.checked[item] = false; });\n      await this.saveChecklistState();\n    }\n  }\n\n  async saveChecklistState() {\n    try {\n      const xsrfToken = getXsrfToken();\n      await fetch(`/api/contents/${CHECKLIST_FILE}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(xsrfToken ? { 'X-XSRFToken': xsrfToken } : {})\n        },\n        body: JSON.stringify({\n          type: 'file',\n          format: 'text',\n          content: JSON.stringify(this.checked)\n        })\n      });\n    } catch (e) {\n      // Could not save\n    }\n  }\n\n  getChecklist(): string[] {\n    return this.checklist;\n  }\n\n  getChecked(): Record<string, boolean> {\n    return this.checked;\n  }\n} \n","import { createSection, createButton } from '../utils';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\nimport { INotebookTracker } from '@jupyterlab/notebook';\n\n// Demo content stored as a variable instead of reading from file\nconst DEMO_CONTENT = `# ReproLab Demo\n\nWelcome to ReproLab! This extension helps you make your research more reproducible.\n\n## Features\n\n- **Create Experiments**: Automatically save immutable snapshots of your code under \\`git\\` tags to preserve the **exact code and outputs**\n- **Manage Dependencies**: Automatically gather and pin **exact package versions**, so that others can set up your environment with one command\n- **Cache Data**: Call external API/load manually dataset only once, caching function will handle the rest\n- **Archive Data**: Caching function can also preserve the compressed data in *AWS S3*, so you always know what data was used and reduce the API calls\n- **Publishing guide**: The reproducibility checklist & automated generation of reproducability package make publishing to platforms such as Zenodo very easy\n\n## Getting Started\n\n1. Use the sidebar to view ReproLab features\n2. Create virtual environment and pin your dependencies, go to reprolab section \\`Create reproducible environment\\` \n3. Create an experiment to save your current state, go to reprolab section \\`Create experiment\\`\n4. Archive your data for long-term storage, go to reprolab section \\`Demo\\` and play around with it.\n5. Publish your work when ready, remember to use reproducability checklist from the section \\`Reproducibility Checklist\\`\n\n## Example Usage of persistio decorator\n\nTo cache and archive the datasets you use, both from local files and APIs we developed a simple decorator that put over your function that gets the datasets caches the file both locally and in the cloud so that the dataset you use is archived and the number of calls to external APIs is minimal and you don't need to keep the file around after you run it once.\n\nHere is an example using one of NASA open APIs. If you want to test it out yourself, you can copy the code, but you need to provide bucket name and access and secret key in the left-hand panel using the \\`AWS S3 Configuration\\` section.\n\n\\`\\`\\`python\nimport requests\nimport pandas as pd\nfrom io import StringIO\n\n# The two lines below is all that you need to add\nfrom reprolab.experiment import persistio\n@persistio()\ndef get_exoplanets_data_from_nasa():\n    url = \"https://exoplanetarchive.ipac.caltech.edu/TAP/sync\"\n\n    query = \"\"\"\n    SELECT TOP 10\n        pl_name AS planet_name,\n        hostname AS host_star,\n        pl_orbper AS orbital_period_days,\n        pl_rade AS planet_radius_earth,\n        disc_year AS discovery_year\n    FROM\n        ps\n    WHERE\n        default_flag = 1\n    \"\"\"\n\n    params = {\n        \"query\": query,\n        \"format\": \"csv\"\n    }\n\n    response = requests.get(url, params=params)\n\n    if response.status_code == 200:\n        df = pd.read_csv(StringIO(response.text))\n        \n        print(df)\n        \n    else:\n        print(f\"Error: {response.status_code} - {response.text}\")\n    return df\n\nexoplanets_data = get_exoplanets_data_from_nasa()\n\\`\\`\\`\n\nIf you run this cell twice you will notice from the logs that the second time file was read from the compressed file in the cache. If you were to lose access to local cache (e.g. by pulling the repository using different device) \\`persistio\\` would fetch the data from the cloud archive.\n\n\nFor more information, visit our [documentation](https://github.com/your-repo/reprolab).`;\n\nexport class DemoSection {\n  private app: JupyterFrontEnd;\n  private notebooks: INotebookTracker | undefined;\n\n  constructor(app: JupyterFrontEnd, notebooks?: INotebookTracker) {\n    this.app = app;\n    this.notebooks = notebooks;\n  }\n\n  render(): string {\n    const demoContent = document.createElement('div');\n    demoContent.innerHTML =\n      '<p>Press the button below to add a demo cell to the top of the active notebook. The cell will display the ReproLab documentation.</p>';\n    demoContent.appendChild(createButton('reprolab-demo-btn', 'Add Demo Cell'));\n    const section = createSection('Demo', demoContent.innerHTML);\n    return section.outerHTML;\n  }\n\n  async handleDemoButton() {\n    if (this.notebooks && this.notebooks.currentWidget) {\n      const notebook = this.notebooks.currentWidget.content;\n      if (notebook.model && notebook.model.cells.length > 0) {\n        notebook.activeCellIndex = 0;\n      } else {\n        this.app.commands.execute('notebook:insert-cell-below');\n        notebook.activeCellIndex = 0;\n      }\n      this.app.commands.execute('notebook:insert-cell-above');\n      if (notebook.model && notebook.model.cells.length > 0) {\n        const cell = notebook.model.cells.get(0);\n        if (cell) {\n          try {\n            // Use the hardcoded demo content instead of reading from file\n            cell.sharedModel.setSource(DEMO_CONTENT);\n            // Change cell type to markdown\n            this.app.commands.execute('notebook:change-cell-to-markdown');\n            // Render all markdown cells to ensure proper display\n            this.app.commands.execute('notebook:render-all-markdown');\n          } catch (error) {\n            console.error('Error setting demo content:', error);\n          }\n        }\n      }\n    }\n  }\n}\n","import { createSection } from '../utils';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\n\n// Constants\nconst ENVIRONMENT_OPTIONS = {\n  CREATE_BUTTON_ID: 'reprolab-create-environment-btn',\n  FREEZE_DEPS_BUTTON_ID: 'reprolab-freeze-deps-btn'\n} as const;\n\nconst CELL_CONTENT = {\n  ENVIRONMENT_SETUP: `from reprolab.environment import create_new_venv\ncreate_new_venv('.my_venv')`,\n  FREEZE_DEPS: `from reprolab.environment import freeze_venv_dependencies\nfreeze_venv_dependencies('.my_venv')`\n} as const;\n\nexport class EnvironmentSection {\n  private readonly notebooks: INotebookTracker | undefined;\n  private readonly app: JupyterFrontEnd;\n\n  constructor(app: JupyterFrontEnd, notebooks?: INotebookTracker) {\n    this.app = app;\n    this.notebooks = notebooks;\n  }\n\n  render(): string {\n    const environmentContent = this.createEnvironmentContent();\n    const section = createSection('Create reproducible environment', environmentContent.innerHTML);\n    return section.outerHTML;\n  }\n\n  private createEnvironmentContent(): HTMLElement {\n    const container = document.createElement('div');\n    \n    // Description\n    container.innerHTML = this.getDescriptionText();\n    \n    // Create environment button\n    const createButton = this.createEnvironmentButton();\n    container.appendChild(createButton);\n    \n    // Add some spacing\n    const spacer = document.createElement('div');\n    spacer.style.marginTop = '10px';\n    container.appendChild(spacer);\n    \n    // Dependency freeze description\n    const freezeDescription = document.createElement('div');\n    freezeDescription.innerHTML = this.getFreezeDescriptionText();\n    freezeDescription.style.marginBottom = '10px';\n    container.appendChild(freezeDescription);\n    \n    // Freeze dependencies button\n    const freezeButton = this.createFreezeDepsButton();\n    container.appendChild(freezeButton);\n    \n    return container;\n  }\n\n  private getDescriptionText(): string {\n    return '<p>Using virtual environments and pinning exact versions of dependencies used is crucial for others to be able to reproduce your work.</p><p><strong>Important:</strong> Remove created cell after creating virtual environment.</p>';\n  }\n\n  private getFreezeDescriptionText(): string {\n    return '<p>Freeze the versions of packages used and save them to requirements.txt for reproducible environments.</p><p><strong>Important:</strong> Keep the dependency freeze as the last cell.</p>';\n  }\n\n  private createEnvironmentButton(): HTMLElement {\n    const button = document.createElement('button');\n    button.className = 'reprolab-button';\n    button.textContent = 'Create virtual env';\n    button.id = ENVIRONMENT_OPTIONS.CREATE_BUTTON_ID;\n    \n    return button;\n  }\n\n  private createFreezeDepsButton(): HTMLElement {\n    const button = document.createElement('button');\n    button.className = 'reprolab-button';\n    button.textContent = 'Add dependency freeze cell';\n    button.id = ENVIRONMENT_OPTIONS.FREEZE_DEPS_BUTTON_ID;\n    \n    return button;\n  }\n\n  public async createEnvironment(): Promise<void> {\n    if (!this.validateNotebookContext()) {\n      return;\n    }\n\n    try {\n      await this.addEnvironmentCell();\n      await this.executeEnvironmentCell();\n      \n      console.log('[ReproLab] Environment setup completed successfully');\n    } catch (error) {\n      console.error('[ReproLab] Error creating environment:', error);\n    }\n  }\n\n  public async addFreezeDepsCell(): Promise<void> {\n    if (!this.validateNotebookContext()) {\n      return;\n    }\n\n    try {\n      await this.addFreezeDepsCellToNotebook();\n      \n      console.log('[ReproLab] Dependency freeze cell added successfully');\n    } catch (error) {\n      console.error('[ReproLab] Error adding dependency freeze cell:', error);\n    }\n  }\n\n  private validateNotebookContext(): boolean {\n    if (!this.notebooks?.currentWidget) {\n      console.error('[ReproLab] No active notebook found');\n      return false;\n    }\n\n    if (!this.notebooks.currentWidget.content.model) {\n      console.error('[ReproLab] No notebook model found');\n      return false;\n    }\n\n    return true;\n  }\n\n  private async addEnvironmentCell(): Promise<void> {\n    const notebook = this.notebooks!.currentWidget!.content;\n    \n    console.log('[ReproLab] Adding environment setup cell...');\n\n    // Add cell at the top of the notebook\n    notebook.activeCellIndex = 0;\n    this.app.commands.execute('notebook:insert-cell-above');\n    await this.delay(100);\n    \n    const environmentCell = notebook.model!.cells.get(0);\n    if (environmentCell) {\n      environmentCell.sharedModel.setSource(CELL_CONTENT.ENVIRONMENT_SETUP);\n      console.log('[ReproLab] Added environment setup cell');\n    }\n  }\n\n  private async executeEnvironmentCell(): Promise<void> {\n    console.log('[ReproLab] Executing environment setup cell...');\n    \n    // Set the first cell as active and execute it\n    const notebook = this.notebooks!.currentWidget!.content;\n    notebook.activeCellIndex = 0;\n    await this.app.commands.execute('notebook:run-cell');\n    await this.delay(2000);\n  }\n\n  private async addFreezeDepsCellToNotebook(): Promise<void> {\n    const notebook = this.notebooks!.currentWidget!.content;\n    \n    console.log('[ReproLab] Adding dependency freeze cell...');\n\n    // Add cell at the bottom of the notebook\n    const cellCount = notebook.model!.cells.length;\n    notebook.activeCellIndex = cellCount;\n    this.app.commands.execute('notebook:insert-cell-below');\n    await this.delay(100);\n    \n    const freezeCell = notebook.model!.cells.get(cellCount);\n    if (freezeCell) {\n      freezeCell.sharedModel.setSource(CELL_CONTENT.FREEZE_DEPS);\n      console.log('[ReproLab] Added dependency freeze cell');\n    }\n  }\n\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n} \n","import { createSection } from '../utils';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\n\n// Constants\nconst EXPERIMENT_OPTIONS = {\n  CREATE_BUTTON_ID: 'reprolab-create-experiment-btn'\n} as const;\n\nconst CELL_CONTENT = {\n  START_EXPERIMENT: `from reprolab.experiment import start_experiment, end_experiment\nstart_experiment()`,\n  END_EXPERIMENT: 'end_experiment()'\n} as const;\n\nexport class ExperimentSection {\n  private readonly notebooks: INotebookTracker | undefined;\n  private readonly app: JupyterFrontEnd;\n\n  constructor(app: JupyterFrontEnd, notebooks?: INotebookTracker) {\n    this.app = app;\n    this.notebooks = notebooks;\n  }\n\n  render(): string {\n    const experimentContent = this.createExperimentContent();\n    const section = createSection('Create experiment', experimentContent.innerHTML);\n    return section.outerHTML;\n  }\n\n  private createExperimentContent(): HTMLElement {\n    const container = document.createElement('div');\n    \n    // Description\n    container.innerHTML = this.getDescriptionText();\n    \n    // Create experiment button\n    const createButton = this.createExperimentButton();\n    container.appendChild(createButton);\n    \n    return container;\n  }\n\n  private getDescriptionText(): string {\n    return '<p>For reproducible experiments its crucial to preserve exact immutable snapshot of software. Creating experiments using ReproLab executes your notebook code top to bottom and saves the end result under git tag.</p>';\n  }\n\n  private createExperimentButton(): HTMLElement {\n    const button = document.createElement('button');\n    button.className = 'reprolab-button';\n    button.textContent = 'Create experiment';\n    button.id = EXPERIMENT_OPTIONS.CREATE_BUTTON_ID;\n    \n    return button;\n  }\n\n  public async createExperiment(): Promise<void> {\n    if (!this.validateNotebookContext()) {\n      return;\n    }\n\n    try {\n      await this.saveNotebookState();\n      await this.addExperimentCells();\n      await this.executeExperiment();\n      \n      console.log('[ReproLab] Experiment completed successfully');\n    } catch (error) {\n      console.error('[ReproLab] Error creating experiment:', error);\n    }\n  }\n\n  private validateNotebookContext(): boolean {\n    if (!this.notebooks?.currentWidget) {\n      console.error('[ReproLab] No active notebook found');\n      return false;\n    }\n\n    if (!this.notebooks.currentWidget.content.model) {\n      console.error('[ReproLab] No notebook model found');\n      return false;\n    }\n\n    return true;\n  }\n\n  private async saveNotebookState(): Promise<void> {\n    console.log('[ReproLab] Saving notebook before experiment...');\n    await this.app.commands.execute('docmanager:save-all');\n    await this.delay(500);\n  }\n\n  private async addExperimentCells(): Promise<void> {\n    const notebook = this.notebooks!.currentWidget!.content;\n    const originalCellCount = notebook.model!.cells.length;\n    \n    console.log(`[ReproLab] Original notebook has ${originalCellCount} cells`);\n\n    await this.addStartExperimentCell(notebook);\n    await this.addEndExperimentCell(notebook);\n\n    console.log(`[ReproLab] Notebook now has ${notebook.model!.cells.length} cells`);\n  }\n\n  private async addStartExperimentCell(notebook: any): Promise<void> {\n    notebook.activeCellIndex = 0;\n    this.app.commands.execute('notebook:insert-cell-above');\n    await this.delay(100);\n    \n    const startCell = notebook.model!.cells.get(0);\n    if (startCell) {\n      startCell.sharedModel.setSource(CELL_CONTENT.START_EXPERIMENT);\n      console.log('[ReproLab] Added start_experiment cell');\n    }\n  }\n\n  private async addEndExperimentCell(notebook: any): Promise<void> {\n    notebook.activeCellIndex = notebook.model!.cells.length - 1;\n    this.app.commands.execute('notebook:insert-cell-below');\n    await this.delay(100);\n    \n    const endCell = notebook.model!.cells.get(notebook.model!.cells.length - 1);\n    if (endCell) {\n      endCell.sharedModel.setSource(CELL_CONTENT.END_EXPERIMENT);\n      console.log('[ReproLab] Added end_experiment cell');\n    }\n  }\n\n  private async executeExperiment(): Promise<void> {\n    console.log('[ReproLab] Running all cells...');\n    await this.app.commands.execute('notebook:run-all-cells');\n    await this.delay(2000);\n  }\n\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n","import { createSection, createButton } from '../utils';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { JupyterFrontEnd } from '@jupyterlab/application';\n\nexport class ZenodoSection {\n  private notebooks: INotebookTracker | undefined;\n  private app: JupyterFrontEnd;\n\n  constructor(app: JupyterFrontEnd, notebooks?: INotebookTracker) {\n    this.app = app;\n    this.notebooks = notebooks;\n  }\n\n  render(): string {\n    const zenodoContent = document.createElement('div');\n    zenodoContent.innerHTML = '<p>You can in a few steps download the raw datasets and save the snapshots of software to the Zenodo for archiving</p>';\n    zenodoContent.appendChild(createButton('reprolab-zenodo-more', 'See more'));\n    const section = createSection('Publishing software and data to Zenodo', zenodoContent.innerHTML);\n    return section.outerHTML;\n  }\n\n  handleZenodoButton(modal: HTMLElement): void {\n    modal.style.display = 'flex';\n  }\n\n  async handleTestButton(): Promise<void> {\n    if (!this.validateNotebookContext()) {\n      return;\n    }\n\n    try {\n      await this.addReproducabilityCells();\n      await this.executeFirstCell();\n      \n      console.log('[ReproLab] Reproducability package cells added successfully');\n    } catch (error) {\n      console.error('[ReproLab] Error adding reproducability cells:', error);\n    }\n  }\n\n  private validateNotebookContext(): boolean {\n    if (!this.notebooks?.currentWidget) {\n      console.error('[ReproLab] No active notebook found');\n      return false;\n    }\n\n    if (!this.notebooks.currentWidget.content.model) {\n      console.error('[ReproLab] No notebook model found');\n      return false;\n    }\n\n    return true;\n  }\n\n  private async addReproducabilityCells(): Promise<void> {\n    const notebook = this.notebooks!.currentWidget!.content;\n    \n    console.log('[ReproLab] Adding reproducability package cells...');\n\n    // Add first cell at the bottom of the notebook\n    const cellCount = notebook.model!.cells.length;\n    notebook.activeCellIndex = cellCount;\n    this.app.commands.execute('notebook:insert-cell-below');\n    await this.delay(100);\n    \n    const listTagsCell = notebook.model!.cells.get(cellCount);\n    if (listTagsCell) {\n      listTagsCell.sharedModel.setSource(`from reprolab.experiment import list_and_sort_git_tags\nlist_and_sort_git_tags()\n# Pick your git tag, to download the reproducability package`);\n      console.log('[ReproLab] Added git tags listing cell');\n    }\n\n    // Add second cell\n    notebook.activeCellIndex = cellCount + 1;\n    this.app.commands.execute('notebook:insert-cell-below');\n    await this.delay(100);\n    \n    const downloadCell = notebook.model!.cells.get(cellCount + 1);\n    if (downloadCell) {\n      downloadCell.sharedModel.setSource(`from reprolab.experiment import download_reproducability_package\ndownload_reproducability_package('<git_tag>')`);\n      console.log('[ReproLab] Added download package cell');\n    }\n  }\n\n  private async executeFirstCell(): Promise<void> {\n    console.log('[ReproLab] Executing git tags listing cell...');\n    \n    const notebook = this.notebooks!.currentWidget!.content;\n    const cellCount = notebook.model!.cells.length;\n    \n    // Set the first new cell as active and execute it\n    notebook.activeCellIndex = cellCount - 2; // First of the two new cells\n    await this.app.commands.execute('notebook:run-cell');\n    await this.delay(2000);\n  }\n\n  private delay(ms: number): Promise<void> {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n}\n","/**\n * Utility functions for the ReproLab extension\n */\n\n/**\n * Creates a section element with a title and content\n */\nexport function createSection(title: string, content: string): HTMLElement {\n  const section = document.createElement('div');\n  section.className = 'reprolab-section';\n  section.innerHTML = `\n    <h3>${title}</h3>\n    ${content}\n  `;\n  return section;\n}\n\n/**\n * Creates a button element with the specified ID and text\n */\nexport function createButton(id: string, text: string): HTMLButtonElement {\n  const button = document.createElement('button');\n  button.id = id;\n  button.className = 'reprolab-button';\n  button.textContent = text;\n  return button;\n}\n\n/**\n * Creates an input element with the specified ID, type, placeholder, default value, and placeholder text\n */\nexport function createInput(\n  id: string,\n  type: string,\n  placeholder: string,\n  defaultValue: string = '',\n  placeholderText: string = ''\n): HTMLInputElement {\n  const input = document.createElement('input');\n  input.id = id;\n  input.type = type;\n  input.className = 'reprolab-input';\n  input.placeholder = placeholderText || placeholder;\n  input.value = defaultValue;\n  return input;\n}\n\n/**\n * Gets the XSRF token from cookies\n */\nexport function getXsrfToken(): string | null {\n  const match = document.cookie.match('\\\\b_xsrf=([^;]*)\\\\b');\n  return match ? decodeURIComponent(match[1]) : null;\n} \n"],"names":[],"sourceRoot":""}